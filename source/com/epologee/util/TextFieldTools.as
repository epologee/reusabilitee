package com.epologee.util {	import com.epologee.development.logging.logger;	import flash.text.TextField;	/**	 * @author Eric-Paul Lecluse | epologee.com (c) 2008	 */	public class TextFieldTools {		/**		 * Trims a textfield to the required lineheight.		 * @return the remaining lines.		 */		public static function popToLineCount(inTextField:TextField, inLineHeight:uint = 1):String {			var trimmed:Array = inTextField.text.split(" ");			var remaining:Array = [];						logger.debug("trimToLine: " + inTextField.name);			logger.debug("	before " + inTextField.numLines);						while (inTextField.numLines > inLineHeight && trimmed.length) {				var lineBreak:String = trimmed.pop();				remaining.unshift(lineBreak);								inTextField.replaceText(0, inTextField.length, trimmed.join(" "));			}						logger.debug("	after " + inTextField.numLines);						return remaining.join(" ");		}			public static function shiftToLineCount(inTextField:TextField, inLineHeight:uint = 1):String {			var trimmed:Array = inTextField.text.split(" ");			var remaining:Array = [];						logger.debug("trimToLine: " + inTextField.name);			logger.debug("	before " + inTextField.numLines);						while (inTextField.numLines > inLineHeight && trimmed.length) {				var lineBreak:String = trimmed.shift();				remaining.push(lineBreak);								inTextField.replaceText(0, inTextField.length, trimmed.join(" "));			}						logger.debug("	after " + inTextField.numLines);						return remaining.join(" ");		}		}}