package com.epologee.application {	import com.epologee.development.logging.logger;	import flash.display.MovieClip;	import flash.display.Stage;	import flash.events.ContextMenuEvent;	import flash.events.Event;	import flash.net.URLRequest;	import flash.net.navigateToURL;	import flash.system.Capabilities;	import flash.ui.ContextMenu;	import flash.ui.ContextMenuItem;	import flash.utils.getQualifiedClassName;	/**	 * @author epologee.com ï¿½ 2008	 */	public class AbstractApplication extends MovieClip implements IApplication {		public static var globalStage : Stage;		private var _isRoot : Boolean = false;		private var _madeByURL : String;
		public function AbstractApplication(inMadeBy : String = "made by epologee.com", inMadeByURL : String = "http://epologee.com", inAppVersion : String = "(unknown)") {			if (stage) {				logger.warn("AbstractApplication: not using frame factory class");				_isRoot = true;				setGlobalStage(stage);			} else {				addEventListener(Event.ADDED_TO_STAGE, handleAddedToStage);			}			var cm : ContextMenu = new ContextMenu();			cm.hideBuiltInItems();						if (inMadeBy) {				var madeBy : ContextMenuItem = new ContextMenuItem(inMadeBy);				if (inMadeByURL) {					_madeByURL = inMadeByURL;					madeBy.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, handleMadeBy);				}				cm.customItems.push(madeBy);			}			// add version name			cm.customItems.push(new ContextMenuItem("Build version: " + inAppVersion));			cm.customItems.push(new ContextMenuItem("Flash version: " + Capabilities.version + (Capabilities.isDebugger ? " (debug)" : " (release)")));						contextMenu = cm;		}		private function handleMadeBy(event : ContextMenuEvent) : void {			navigateToURL(new URLRequest(_madeByURL), "_blank");		}		public function setGlobalStage(inStage : Stage) : void {			globalStage = inStage;						if (_isRoot) {				// preloading is not implemented.				startApplication(null);			}		}		/**		 * Override this method.		 */ 		public function startApplication(inPreloaded : Array) : void {			//override this method			throw new Error("override startApplication");		}		protected function handleAddedToStage(event : Event) : void {			setGlobalStage(stage);		}		override public function toString() : String {			var s : String = "";			// s = "[ " + name + " ]:";			return s + getQualifiedClassName(this);		}	}}