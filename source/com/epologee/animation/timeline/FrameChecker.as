package com.epologee.animation.timeline {	import flash.display.FrameLabel;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.utils.getQualifiedClassName;	/**	 * @author Eric-Paul Lecluse | epologee.com (c) 2009	 */	[Event(name="STATUS_CHANGE", type="com.epologee.animation.timeline.FrameEvent")]	public class FrameChecker extends EventDispatcher {		private var _labels:Array;		private var _timeline:MovieClip;		private var _lastLabel:String = "";		private var _currentLabel:String = "";		private var _lastFrame:int = 0;		private var _status:int = 0;		private var _lastStatus:int;		public function get status():int {			return _status;		}		public function get currentLabel():String {			return _currentLabel;		}		public function get lastLabel():String {			return _lastLabel;		}		public function get lastFrame():int {			return _lastFrame;		}		public function get lastStatus():int {			return _lastStatus;		}				public function get totalFrames() : int {			return _timeline.totalFrames;		}				public function get currentFrame() : int {			return _timeline.currentFrame;		}				public function get timeline() : MovieClip {			return _timeline;		}		public function FrameChecker(inTimeline:MovieClip) {			_timeline = inTimeline;			_labels = inTimeline.currentLabels;		}		public function start(inPlayTimelineToo:Boolean = false):void {			_timeline.addEventListener(Event.ENTER_FRAME, handleEnterFrame);			if (inPlayTimelineToo) {				_timeline.play();			}		}		public function stop(inStopTimelineToo:Boolean = false):void {			_timeline.removeEventListener(Event.ENTER_FRAME, handleEnterFrame);			if (inStopTimelineToo) {				_timeline.stop();			}		}		/**		 * Get the frame before a named label.		 */		public function getFrameBefore(inLabelName:String):int {			var leni:int = _labels.length;			for (var i:int = 0;i < leni; i++) {				var label:FrameLabel = FrameLabel(_labels[i]);				if (label.name == inLabelName) {					return Math.max(label.frame - 1, 1);				}			}						return 0;		}		/**		 * Get the last frame of a label block.		 */		public function getLastFrameOf(inLabelName:String):int {			var leni:int = _labels.length;			for (var i:int = 0;i < leni; i++) {				var label:FrameLabel = FrameLabel(_labels[i]);				if (label.name == inLabelName) {					var nextLabel:FrameLabel = _labels[i + 1] as FrameLabel;										if (nextLabel) {						return Math.max(nextLabel.frame - 1, 1);					} else {						return _timeline.totalFrames;					}				}			}						return 0;		}		/**		 * Get the last frame of a label block.		 */		public function getFirstFrameOf(inLabelName:String):int {			var leni:int = _labels.length;			for (var i:int = 0;i < leni; i++) {				var label:FrameLabel = FrameLabel(_labels[i]);				if (label.name == inLabelName) {					return label.frame;				}			}						return -1;		}				private function handleEnterFrame(event:Event):void {			if (_timeline.currentFrame == _lastFrame) return;			_currentLabel = _timeline.currentLabel;						_status = 0;			if (_timeline.currentFrame == 1) {				_status += FrameStatus.FIRST_FRAME;			}							if (_timeline.currentFrame == _timeline.totalFrames) {				_status += FrameStatus.LAST_FRAME;			}							var leni:int = _labels.length;			for (var i:int = 0;i < leni; i++) {				var label:FrameLabel = FrameLabel(_labels[i]);				if (label.frame == _timeline.currentFrame) {					_status += FrameStatus.LABEL_CHANGE;				}				if (label.frame == _timeline.currentFrame + 1) {					_status += FrameStatus.PRECEDING_LABEL_CHANGE;				}			}						if (_status && _status != _lastStatus) {				dispatchEvent(new FrameEvent(FrameEvent.STATUS_CHANGE, _status, _timeline.currentLabel));				// check the last label, frame and status in the event handler.				// after that the values will be overridden:			}									// update last label, frame and status			_lastLabel = _timeline.currentLabel;			_lastFrame = _timeline.currentFrame;			_lastStatus = _status;		}				override public function toString():String {			// com.epologee.animation.timeline.FrameChecker			var s:String = "";			// s = "[ " + name + " ]:";			return s+getQualifiedClassName(this);		}	}}